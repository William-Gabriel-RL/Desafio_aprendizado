// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repositorys.Context;

#nullable disable

namespace Repositorys.Migrations
{
    [DbContext(typeof(DesafioAprendizadoContext))]
    partial class DesafioAprendizadoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.Models.Categoria", b =>
                {
                    b.Property<int>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoriaId"));

                    b.Property<DateTime>("CategoriaDataUltimaAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<bool>("CategoriaDeletado")
                        .HasColumnType("bit");

                    b.Property<string>("CategoriaNome")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("CategoriaId");

                    b.ToTable("Categoria", (string)null);
                });

            modelBuilder.Entity("Entities.Models.Comanda", b =>
                {
                    b.Property<Guid>("ComandaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AtendenteMatricula")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("ComandaDataUltimaAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<bool>("ComandaDeletado")
                        .HasColumnType("bit");

                    b.Property<bool>("ComandaFinalizada")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ComandaHoraAbertura")
                        .HasColumnType("datetime");

                    b.Property<decimal>("ComandaTotal")
                        .HasColumnType("decimal(8,2)");

                    b.Property<int>("MesaId")
                        .HasColumnType("int");

                    b.HasKey("ComandaId");

                    b.HasIndex("AtendenteMatricula");

                    b.HasIndex("MesaId");

                    b.ToTable("Comanda", (string)null);
                });

            modelBuilder.Entity("Entities.Models.FormaPagamento", b =>
                {
                    b.Property<int>("FormaPagamentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FormaPagamentoId"));

                    b.Property<DateTime>("FormaPagamentoDataUltimaAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<bool>("FormaPagamentoDeletado")
                        .HasColumnType("bit");

                    b.Property<string>("FormaPagamentoNome")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.HasKey("FormaPagamentoId");

                    b.ToTable("FormaPagamento", (string)null);
                });

            modelBuilder.Entity("Entities.Models.Mesa", b =>
                {
                    b.Property<int>("MesaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MesaId"));

                    b.Property<DateTime>("MesaDataUltimaAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<bool>("MesaDeletada")
                        .HasColumnType("bit");

                    b.Property<bool>("MesaOcupada")
                        .HasColumnType("bit");

                    b.HasKey("MesaId");

                    b.ToTable("Mesa", (string)null);
                });

            modelBuilder.Entity("Entities.Models.Pagamento", b =>
                {
                    b.Property<int>("PagamentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PagamentoId"));

                    b.Property<Guid>("ComandaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("FormaPagamentoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PagamentoDataHora")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("PagamentoDataUltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<bool>("PagamentoDeletado")
                        .HasColumnType("bit");

                    b.Property<string>("UsuarioMatricula")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(8, 2)");

                    b.HasKey("PagamentoId");

                    b.HasIndex("ComandaId");

                    b.HasIndex("FormaPagamentoId");

                    b.HasIndex("UsuarioMatricula");

                    b.ToTable("Pagamento", (string)null);
                });

            modelBuilder.Entity("Entities.Models.Produto", b =>
                {
                    b.Property<int>("ProdutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProdutoId"));

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(8,2)");

                    b.Property<DateTime>("ProdutoDataUltimaAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<bool>("ProdutoDeletado")
                        .HasColumnType("bit");

                    b.Property<string>("ProdutoDescricao")
                        .IsRequired()
                        .HasMaxLength(120)
                        .IsUnicode(false)
                        .HasColumnType("varchar(120)");

                    b.Property<string>("ProdutoFotoId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ProdutoNome")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProdutoId");

                    b.ToTable("Produto", (string)null);
                });

            modelBuilder.Entity("Entities.Models.ProdutoCategoria", b =>
                {
                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ProdutoCategoriaDataUltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ProdutoCategoriaDeletado")
                        .HasColumnType("bit");

                    b.HasKey("ProdutoId", "CategoriaId");

                    b.HasIndex("CategoriaId");

                    b.ToTable("ProdutoCategoria", (string)null);
                });

            modelBuilder.Entity("Entities.Models.ProdutoComanda", b =>
                {
                    b.Property<int>("ProdutoComandaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProdutoComandaId"));

                    b.Property<Guid>("ComandaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ProdutoComandaDataUltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ProdutoComandaDeletado")
                        .HasColumnType("bit");

                    b.Property<string>("ProdutoComandaObservacao")
                        .IsRequired()
                        .HasMaxLength(120)
                        .IsUnicode(false)
                        .HasColumnType("varchar(120)");

                    b.Property<decimal>("ProdutoComandaPreco")
                        .HasColumnType("decimal(8,2)");

                    b.Property<int>("ProdutoComandaQuantidadeProdutos")
                        .HasColumnType("int");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.HasKey("ProdutoComandaId");

                    b.HasIndex("ComandaId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("ProdutoComanda", (string)null);
                });

            modelBuilder.Entity("Entities.Models.ProdutoComandaSituacao", b =>
                {
                    b.Property<int>("ProdutoComandaSituacaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProdutoComandaSituacaoId"));

                    b.Property<int>("ProdutoComandaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ProdutoComandaSituacaoDataHora")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ProdutoComandaSituacaoDataUltimaAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<bool>("ProdutoComandaSituacaoDeletado")
                        .HasColumnType("bit");

                    b.Property<string>("ProdutoComandaSituacaoMotivo")
                        .HasMaxLength(120)
                        .IsUnicode(false)
                        .HasColumnType("varchar(120)");

                    b.Property<int>("StatusSituacaoId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioMatricula")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ProdutoComandaSituacaoId");

                    b.HasIndex("ProdutoComandaId");

                    b.HasIndex("StatusSituacaoId");

                    b.HasIndex("UsuarioMatricula");

                    b.ToTable("ProdutoComandaSituacao", (string)null);
                });

            modelBuilder.Entity("Entities.Models.StatusSituacao", b =>
                {
                    b.Property<int>("StatusSituacaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusSituacaoId"));

                    b.Property<DateTime>("StatusSituacaoDataUltimaAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<bool>("StatusSituacaoDeletado")
                        .HasColumnType("bit");

                    b.Property<string>("StatusSituacaoNome")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.HasKey("StatusSituacaoId");

                    b.ToTable("StatusSituacao", (string)null);
                });

            modelBuilder.Entity("Entities.Models.Usuario", b =>
                {
                    b.Property<string>("UsuarioMatricula")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("UsuarioDataUltimaAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<bool>("UsuarioDeletado")
                        .HasColumnType("bit");

                    b.Property<string>("UsuarioNome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("UsuarioSenha")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("UsuarioTipoId")
                        .HasColumnType("int");

                    b.HasKey("UsuarioMatricula");

                    b.HasIndex("UsuarioTipoId");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("Entities.Models.UsuarioTipo", b =>
                {
                    b.Property<int>("UsuarioTipoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioTipoId"));

                    b.Property<DateTime>("UsuarioTipoDataUltimaAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<bool>("UsuarioTipoDeletado")
                        .HasColumnType("bit");

                    b.Property<string>("UsuarioTipoNome")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("UsuarioTipoId");

                    b.ToTable("UsuarioTipo", (string)null);
                });

            modelBuilder.Entity("Entities.Models.Comanda", b =>
                {
                    b.HasOne("Entities.Models.Usuario", "Atendente")
                        .WithMany()
                        .HasForeignKey("AtendenteMatricula")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Entities.Models.Mesa", "Mesa")
                        .WithMany()
                        .HasForeignKey("MesaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Atendente");

                    b.Navigation("Mesa");
                });

            modelBuilder.Entity("Entities.Models.Pagamento", b =>
                {
                    b.HasOne("Entities.Models.Comanda", "Comanda")
                        .WithMany("Pagamento")
                        .HasForeignKey("ComandaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Entities.Models.FormaPagamento", "FormaPagamento")
                        .WithMany()
                        .HasForeignKey("FormaPagamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioMatricula")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comanda");

                    b.Navigation("FormaPagamento");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Entities.Models.ProdutoCategoria", b =>
                {
                    b.HasOne("Entities.Models.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Models.Produto", "Produto")
                        .WithMany("Categorias")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Entities.Models.ProdutoComanda", b =>
                {
                    b.HasOne("Entities.Models.Comanda", "Comanda")
                        .WithMany("ProdutosComanda")
                        .HasForeignKey("ComandaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Entities.Models.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Comanda");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Entities.Models.ProdutoComandaSituacao", b =>
                {
                    b.HasOne("Entities.Models.ProdutoComanda", "ProdutoComanda")
                        .WithMany("Situacoes")
                        .HasForeignKey("ProdutoComandaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Entities.Models.StatusSituacao", "StatusSituacao")
                        .WithMany()
                        .HasForeignKey("StatusSituacaoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Entities.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioMatricula")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ProdutoComanda");

                    b.Navigation("StatusSituacao");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Entities.Models.Usuario", b =>
                {
                    b.HasOne("Entities.Models.UsuarioTipo", "Tipo")
                        .WithMany()
                        .HasForeignKey("UsuarioTipoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("Entities.Models.Comanda", b =>
                {
                    b.Navigation("Pagamento");

                    b.Navigation("ProdutosComanda");
                });

            modelBuilder.Entity("Entities.Models.Produto", b =>
                {
                    b.Navigation("Categorias");
                });

            modelBuilder.Entity("Entities.Models.ProdutoComanda", b =>
                {
                    b.Navigation("Situacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
